def unidad(S):
  for x in S:
    if len(x) == 1:
      un = x[0]
      return un
  return None

def complemento(un):
  if un[0] == '-':
    return un[1]
  else:
    return '-' + un

def unit_propagate(I,S):

  y = True

  while y:

    if [] in S:
      y = False
      return "Insatisfacible"

    un = unidad(S)

    if un != None:
      y = True
      #SE BORRAN LAS CLAUSULAS COMPLETAS QUE TIENEN A L
      if len(un) == 1:
        I[un] = 1
      else:
        I[complemento(un)] = 0
      S = [x for x in S if un not in x]
      #SE BORRA Lc DE LAS DEM√ÅS CLAUSULAS
      for clause in S:
        if complemento(un) in clause:
          clause.remove(complemento(un))

    else:
      y = False
  return I , S

lista = [["p"],["-p","q"],["-q","r","s"],["u","-s","r"],["r","t"],["p","s","-t"],["-r","u"]]
dic = {}

x, y = unit_propagate(dic, lista)

print (x)
print (y)
